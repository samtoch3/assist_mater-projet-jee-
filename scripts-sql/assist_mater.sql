-- PostgreSQL


-- Schema

DROP SCHEMA  IF EXISTS  assist_mater  CASCADE;
CREATE SCHEMA  assist_mater;

SET search_path TO assist_mater, public;


-- Tables

CREATE TABLE compte (
	IdCompte		INT			 	NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	Pseudo			VARCHAR(25)		NOT NULL,
	MotDePasse		VARCHAR(25) 	NOT NULL,
	Email			VARCHAR(100)	NOT NULL,
	PRIMARY KEY (IdCompte)
);

CREATE TABLE role (
	IdCompte		INT				NOT NULL,
	Role			VARCHAR(20)		NOT NULL,
	CHECK( Role IN ('ADMINISTRATEUR','UTILISATEUR') ),	
	PRIMARY KEY (IdCompte, Role)
);

CREATE TABLE categorie (
	IdCategorie		INT				NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	Libelle			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (IdCategorie)
);

CREATE TABLE personne (
	IdPersonne		INT				NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	IdCategorie		INT				NOT NULL,
	Nom				VARCHAR(25)  	NOT NULL,
	Prenom			VARCHAR(25) 	NOT NULL,
	PRIMARY KEY (IdPersonne)
);

CREATE TABLE telephone (
	IdTelephone		INT				NOT NULL	GENERATED BY DEFAULT AS IDENTITY,
	IdPersonne		INT			 	NOT NULL,
	Libelle			VARCHAR(25)		NOT NULL,
	Numero			VARCHAR(25)		NOT NULL,
	PRIMARY KEY (IdTelephone)
);

CREATE VIEW vue_compte_role AS
	SELECT c.Pseudo, r.Role 
	FROM ( compte c
	INNER JOIN role r ON c.IdCompte = r.IdCompte );



-- Insertion des données

INSERT INTO compte (IdCompte, Pseudo, MotDePasse, Email ) VALUES 
  (1, 'geek', 'geek', 'geek@3il.fr' );
INSERT INTO compte (IdCompte, Pseudo, MotDePasse, Email ) VALUES 
  (2, 'chef', 'chef', 'chef@3il.fr' );
INSERT INTO compte (IdCompte, Pseudo, MotDePasse, Email ) VALUES 
  (3, 'job', 'job', 'job@3il.fr' );

ALTER TABLE compte ALTER COLUMN IdCompte RESTART WITH 4;

  
INSERT INTO role (IdCompte, Role) VALUES 
  ( 1, 'ADMINISTRATEUR' );
INSERT INTO role (IdCompte, Role) VALUES 
  ( 1, 'UTILISATEUR' );
INSERT INTO role (IdCompte, Role) VALUES 
  ( 2, 'UTILISATEUR' );
INSERT INTO role (IdCompte, Role) VALUES 
  ( 3, 'UTILISATEUR' );
  
  
INSERT INTO categorie (IdCategorie, Libelle ) VALUES 
  (1, 'Employés' );
INSERT INTO categorie (IdCategorie, Libelle ) VALUES 
  (2, 'Partenaires' );

ALTER TABLE categorie ALTER COLUMN IdCategorie RESTART WITH 3;
  
  
INSERT INTO personne (IdPersonne, IdCategorie, Nom, Prenom) VALUES 
  ( 1, 1, 'DESVALOIS', 'Christian' );
INSERT INTO personne (IdPersonne, IdCategorie, Nom, Prenom) VALUES 
  ( 2, 1, 'BELABDELLI', 'Fethi' );
INSERT INTO personne (IdPersonne, IdCategorie, Nom, Prenom) VALUES 
  ( 3, 1, 'AMBLARD', 'Emmanuel' );

ALTER TABLE personne ALTER COLUMN IdPersonne RESTART WITH 4;
  

INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 11, 1, 'Portable', '06 11 11 11 11' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 12, 1, 'Fax', '05 55 99 11 11' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 13, 1, 'Bureau', '05 55 11 11 11' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 21, 2, 'Portable', '06 22 22 22 22' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 22, 2, 'Fax', '05 55 99 22 22' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 23, 2, 'Bureau', '05 55 22 22 22' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 31, 3, 'Portable', '06 33 33 33 33' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 32, 3, 'Fax', '05 55 99 33 33' );
INSERT INTO telephone (IdTelephone, IdPersonne, Libelle, Numero ) VALUES 
  ( 33, 3, 'Bureau', '05 55 33 33 33' );

ALTER TABLE telephone ALTER COLUMN IdTelephone RESTART WITH 100;
  

-- Contraintes  

ALTER TABLE personne
ADD CONSTRAINT fk_personne_categorie	FOREIGN KEY (IdCategorie) REFERENCES categorie (IdCategorie);

ALTER TABLE telephone
ADD CONSTRAINT fk_telephone_personne	FOREIGN KEY (IdPersonne) REFERENCES personne (IdPersonne);

ALTER TABLE role
ADD CONSTRAINT fk_role_compte	FOREIGN KEY (IdCompte) REFERENCES compte (IdCompte);

CREATE UNIQUE INDEX idx_compte_pseudo ON compte (Pseudo ASC);


-- Compte utilisateur

DROP USER  IF EXISTS  assist_mater;
CREATE USER  assist_mater  WITH PASSWORD 'assist_mater';
GRANT ALL PRIVILEGES ON SCHEMA assist_mater TO assist_mater;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA assist_mater TO assist_mater;

